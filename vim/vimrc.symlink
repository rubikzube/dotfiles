" From http://stevelosh.com/blog/2010/09/coming-home-to-vim/

" Load in pathogen
filetype off
call pathogen#infect()
filetype plugin indent on

" Remove backwards compatibility
set nocompatible
set modelines=0

" Fonts + Colors
set t_Co=256
colorscheme molokai
syntax enable

" Misc
set encoding=utf-8
set scrolloff=3
set autoindent
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set relativenumber

" Move the swap and undo files out of the way
set directory=/tmp
set undodir=/tmp

" Leader
let mapleader = ","

" Search
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>
nnoremap <tab> %
vnoremap <tab> %

" Wrapping
set nowrap
set textwidth=80
set formatoptions=qrn1

" Remap so that ; performs the same thing as :
nnoremap ; :

" Save on losing focus
au FocusLost * :wa

" Status bar
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim

" Moving between windows
nnoremap <leader><up> <C-W>j
nnoremap <leader><down> <C-W>k
nnoremap <leader><left> <C-W>h
nnoremap <leader><right> <C-W>l

" NerdTREE
autocmd vimenter * if !argc() | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
nnoremap <leader>f :NERDTreeToggle<CR>

" Tab behavior
set tabstop=2
set shiftwidth=2
set softtabstop=2
set noexpandtab

nnoremap <leader>t :call <SID>TabToggle()<CR>
function! s:TabToggle()
	if &expandtab
		set noexpandtab
		echo "Tabs set to tabs"
	else
		set expandtab
		echo "Tabs set to spaces"
	endif
endfunction

" Mouse Movements
set mouse=a
nnoremap <leader>m :call <SID>MouseToggle()<CR>
function! s:MouseToggle()
	if &mouse == "c"
		set mouse=a
		echo "Mouse is for Vim"
	else
		set mouse=c
		echo "Mouse is for Terminal"
	endif
endfunction

" File find
nnoremap <leader>p :CtrlP<CR>
set wildignore+=*/.git/*,*/.hg/*,*/.svn/* 
let g:ctrlp_regexp = 1
let g:ctrlp_max_height = 20

" Syntastic
let g:syntastic_enable_signs=1
let g:syntastic_auto_jump=0
let g:syntastic_auto_loc_list=1
nnoremap <leader>c :SyntasticCheck<CR>

" Ack
nnoremap <leader>a :Ack

" Strip Whitespace
nnoremap <leader>w :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" Tagbar
nnoremap <leader>o :TagbarToggle<CR>

" Folding
set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=0
set foldlevelstart=0
nnoremap <Space> za
vnoremap <Space> za

" Vertical splits and gutters
set fcs+=vert:\ 
hi VertSplit ctermbg=232
hi SignColumn ctermbg=232

" Invisibles
set list
set listchars=tab:â–¸\ 
hi SpecialKey ctermfg=234
hi NonText ctermfg=233 ctermbg=233

" Line Numbers
highlight LineNr term=bold cterm=NONE ctermfg=235 ctermbg=NONE gui=NONE guifg=235 guibg=NONE

" Line Boundaries
highlight ColorColumn ctermbg=233
set colorcolumn=121,161,201,241,281

" Set files to syntax
au BufNewFile,BufRead *.swig setlocal ft=htmldjango
au BufNewFile,BufRead *.json setlocal ft=javascript
au BufNewFile,BufRead *.pp setlocal ft=puppet
au BufNewFile,BufRead *.md,*.mh setlocal ft=mason
